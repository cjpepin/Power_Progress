import React from 'react';
import { Line } from 'react-chartjs-2'
import Chart from 'chart.js/auto';
import { useState, useEffect } from 'react';


function AccessoryCharts(){
    // let liftData = [];
    const [selectedLift, setSelectedLift] = useState('');
    const [liftData, setLiftData] = useState('')
    // const [liftDate, setLiftDate] = useState('')
    let curData;
    function plateMath(weight, rpe, reps){
        const rpeArr = new Object;
              rpeArr["10"] = 1;
              rpeArr["9.5"] = 0.978;
              rpeArr["9"] = 0.955;
              rpeArr["8.5"] = 0.939;
              rpeArr["8"] = 0.922;
              rpeArr["7.5"] = 0.907;
              rpeArr["7"] = 0.892;
              rpeArr["6.5"] = 0.878;
              rpeArr["6"] = 0.863;
              rpeArr["5.5"] = 0.848;
              rpeArr["5"] = 0.834;

        const rpeReps = (10 - parseInt(rpe));
        const totReps = (+rpeReps + +reps);
        let diffQ = ((100 - (totReps*2.5))/100);
        let e1rm = weight/diffQ;
        e1rm = Math.round(e1rm * 100)/100;
        return e1rm;
      }
  //Gets data for lift charts
    async function getLiftCharts() {
        console.log("charts test")
        let block;
        if(localStorage.getItem('block')){
            block = localStorage.getItem('block');
        } else {
            block = '';
        }
        const req = await fetch('https://powerprogress.herokuapp.com/api/get_lift', {
            headers: {
                'x-access-token': localStorage.getItem('token'),
                'block': block,
            }
        })

        const data = await req.json();
        if(data.status === 'fine'){
            console.log("setting lift data")
            setLiftData(data.data, []);
            createCharts(data.data);
        } else {
            alert(data.error + "loc1")
        }
       
    }
    function createCharts(data){
        let liftArr = []
        let chartDiv = document.getElementById('accessoryCharts')
        let lift = [];
        let date = [];
        let e1rm;
       
        // for(const key in data){
        //     if(data.hasOwnProperty(key)){
        //         let curLift = data[key].lift
        //         if(selectedLift == curLift){
        //             e1rm = plateMath(data[lift].weight,data[lift].rpe,data[lift].reps)
        //             lift.push(e1rm)
        //             date.push(data[lift].date)     
        //         }
        //         curData = {
        //             labels: date,
        //             datasets: [{
        //                 label: 'Squat',
        //                 data:  lift,
        //                 backgroundColor: 'rgba(255, 99, 132, 0.2)',
        //                 borderColor: 'rgba(81, 163, 0, 1)',
        //                 color: 'rgba(239, 0, 0, 1)',
        //                 fill: false,
        //                 borderWidth: 1
        //             }]
        //         };  
        //         console.log(curData)
         for(const key in data){
            if(data.hasOwnProperty(key)){
                let curLift = data[key].lift
                if(selectedLift == curLift){
                    e1rm = plateMath(data[lift].weight,data[lift].rpe,data[lift].reps)
                    lift.push(e1rm)
                    date.push(data[lift].date)     
                }
                curData = {
                    labels: date,
                    datasets: [{
                        label: 'Squat',
                        data:  lift,
                        backgroundColor: 'rgba(255, 99, 132, 0.2)',
                        borderColor: 'rgba(81, 163, 0, 1)',
                        color: 'rgba(239, 0, 0, 1)',
                        fill: false,
                        borderWidth: 1
                    }]
                };  
                console.log(curData)
                // let newDiv = document.createElement('div')
                // newDiv.id = curLift;
                // newDiv.innerText = <Line class="col-xs-6" data={totData}/>
                // chartDiv.appendChild(newDiv)

                }
            }
        }
    // function populateSelect(){
    //     console.log("test1")
    //     let lifts = [];
    //     for(const key in liftData) {
    //         console.log(key);
    //         if(liftData.hasOwnProperty(key) && !(lifts.includes(liftData[key].lift))){
    //             const sel = document.getElementById('selectBox');
    //             const opt = document.createElement('option');
                
    //             let strVal =  liftData[key].lift;
    //             opt.innerHTML = strVal;
    //             sel.appendChild(opt);
    //     }
    // }
    // }
   
    //Takes the data gotten and puts it into respective arrays
    // function createData(data){
    //     for(let i = 0; i < liftData.length; i++){
    //         // console.log(liftData[i]);
    //         if(liftData[i].lift == "squat"){
    //             squatDates.push(liftData[i].date);
    //             squatData.push(parseInt(liftData[i].weight));
    //         } else if(liftData[i].lift == "bench"){
    //             benchDates.push(liftData[i].date);
    //             benchData.push(parseInt(liftData[i].weight));
    //         } else if(liftData[i].lift == "deadlift"){
    //             deadliftDates.push(liftData[i].date);
    //             deadliftData.push(parseInt(liftData[i].weight));
    //         }
       
    //     }
    // }
    //Fills data if first time entering
    // if(liftData != ''){
    //     createData(liftData);
    // }
    // console.log(liftData)
    // console.log(squatData);
    // console.log(benchData);
    // console.log(deadliftData);
    //gets the data every time the page relaods
    useEffect(() => {
        getLiftCharts();
      }, []);
    // useEffect(() => {
    //     populateSelect();
    // }, []);
    //fill the charts
    let totData = {
        labels: [1,2],
        datasets: [{
            label: 'Squat',
            data:  [3,4],
            backgroundColor: 'rgba(255, 99, 132, 0.2)',
            borderColor: 'rgba(81, 163, 0, 1)',
            color: 'rgba(239, 0, 0, 1)',
            fill: false,
            borderWidth: 1
        }]
    }; 
    // useEffect(() => {
    //     let acLi = document.getElementById('accessoryCharts')
    //     acLi.innerHTML = `<Line data=${totData}/>`
    //   }, []);
        return (
            <div style={{display: "grid", gridTemplateColumns: "1fr 1fr 1fr",width: "90vw", height: "60vh", marginLeft: "auto", marginRight: "auto"}}>
                <div id="accessoryCharts">
                    {/* <select id="selectBox">
                        <option>Test</option>
                    </select> */}
                    <Line class="col-xs-6" data={totData}/>
                </div>
            </div>

        );
}
export default AccessoryCharts;